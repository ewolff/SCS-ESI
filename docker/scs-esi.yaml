apiVersion: apps/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: common
    version: "1.0"
  name: common
spec:
  replicas: 1
  selector:
    matchLabels:
      app: common
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: common
    spec:
      containers:
      - name: common
        image: scs-demo-esi-common
        imagePullPolicy: Never
        ports:
        - containerPort: 8180
        resources: {}
status: {}

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: order
    version: "1.0"
  name: order
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: order
    spec:
      containers:
      - name: order
        image: scs-demo-esi-order
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: varnish
    version: "1.0"
  name: varnish
spec:
  replicas: 1
  selector:
    matchLabels:
      app: varnish
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: varnish
    spec:
      containers:
      - name: varnish
        image: scs-demo-esi-varnish
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: common
  name: common
spec:
  ports:
  - port: 8180
    protocol: TCP
    targetPort: 8180
    name: http    
  selector:
    app: common
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: order
  name: order
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: order
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: varnish
  name: varnish
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: varnish
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: scs-esi-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: varnish
          servicePort: 8080
      - path: /order-raw
        backend:
          serviceName: order
          servicePort: 8080